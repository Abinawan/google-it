{"version":3,"sources":["optionDefinitions.js"],"names":["optionDefinitions","name","alias","type","String","Boolean","Number","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,iBAAiB;AAAA;AAAA,uBAAG,CACxB;AACA;AAAEC,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,IAAI,EAAEC;AAAnC,CAFwB,EAIxB;AACA;AAAEH,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE,GAAzB;AAA8BC,EAAAA,IAAI,EAAEC;AAApC,CALwB,EAOxB;AACA;AACA;AAAEH,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,KAAK,EAAE,GAA7B;AAAkCC,EAAAA,IAAI,EAAEE;AAAxC,CATwB,EAWxB;AACA;AACA;AAAEJ,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE,GAAvB;AAA4BC,EAAAA,IAAI,EAAEC;AAAlC,CAbwB,EAexB;AACA;AAAEH,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,KAAK,EAAE,GAAxB;AAA6BC,EAAAA,IAAI,EAAEG;AAAnC,CAhBwB,EAkBxB;AACA;AAAEL,EAAAA,IAAI,EAAE,OAAR;AAAiBE,EAAAA,IAAI,EAAEG;AAAvB,CAnBwB,EAqBxB;AACA;AAAEL,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE,GAA1B;AAA+BC,EAAAA,IAAI,EAAEE;AAArC,CAtBwB,EAwBxB;AACA;AACA;AAAEJ,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAE,GAA9B;AAAmCC,EAAAA,IAAI,EAAEE;AAAzC,CA1BwB,EA4BxB;AACA;AAAEJ,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE,GAA5B;AAAiCC,EAAAA,IAAI,EAAEE;AAAvC,CA7BwB,EA+BxB;AACA;AACA;AAAEJ,EAAAA,IAAI,EAAE,oBAAR;AAA8BC,EAAAA,KAAK,EAAE,GAArC;AAA0CC,EAAAA,IAAI,EAAEE;AAAhD,CAjCwB,EAmCxB;AACA;AAAEJ,EAAAA,IAAI,EAAE,2BAAR;AAAqCC,EAAAA,KAAK,EAAE,GAA5C;AAAiDC,EAAAA,IAAI,EAAEE;AAAvD,CApCwB,EAsCxB;AACA;AACA;AAAEJ,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE,GAAvB;AAA4BC,EAAAA,IAAI,EAAEG;AAAlC,CAxCwB,EA0CxB;AACA;AAAEL,EAAAA,IAAI,EAAE,oBAAR;AAA8BC,EAAAA,KAAK,EAAE,GAArC;AAA0CC,EAAAA,IAAI,EAAEC;AAAhD,CA3CwB,EA6CxB;AACA;AACA;AAAEH,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAE,GAA3B;AAAgCC,EAAAA,IAAI,EAAEC;AAAtC,CA/CwB,EAiDxB;AACA;AAAEH,EAAAA,IAAI,EAAE,eAAR;AAAyBE,EAAAA,IAAI,EAAEC;AAA/B,CAlDwB,EAmDxB;AAAEH,EAAAA,IAAI,EAAE,cAAR;AAAwBE,EAAAA,IAAI,EAAEC;AAA9B,CAnDwB,EAoDxB;AAAEH,EAAAA,IAAI,EAAE,iBAAR;AAA2BE,EAAAA,IAAI,EAAEC;AAAjC,CApDwB,CAAH,CAAvB;;;;AAuDAG,MAAM,CAACC,OAAP,GAAiBR,iBAAjB","sourcesContent":["const optionDefinitions = [\n  // the query that should be sent to the Google search\n  { name: 'query', alias: 'q', type: String },\n\n  // name of the JSON file to save results to\n  { name: 'output', alias: 'o', type: String },\n\n  // prevent results from appearing in the terminal output. Should only be used\n  // with --output (-o) command when saving results to a file\n  { name: 'no-display', alias: 'n', type: Boolean },\n\n  // name of the html file if you want to save the actual response from the\n  // html request\n  { name: 'save', alias: 's', type: String },\n\n  // number of search results to be returned\n  { name: 'limit', alias: 'l', type: Number },\n\n  // enable pagination by choosing which result to start at\n  { name: 'start', type: Number },\n\n  // console.log useful statements to show what's currently taking place\n  { name: 'verbose', alias: 'v', type: Boolean },\n\n  // once results are returned, show them in an interactive prompt where user\n  // can scroll through them\n  { name: 'interactive', alias: 'i', type: Boolean },\n\n  // only display the URLs, instead of the titles and snippets\n  { name: 'only-urls', alias: 'u', type: Boolean },\n\n  // only takes effect when interactive (-i) flag is set as well, will bold\n  // test in results that matched the query\n  { name: 'bold-matching-text', alias: 'b', type: Boolean },\n\n  // option to limit results to only these two sites\n  { name: 'stackoverflow-github-only', alias: 'X', type: Boolean },\n\n  // option to open the first X number of results directly in browser\n  // (only tested on Mac!).\n  { name: 'open', alias: 'O', type: Number },\n\n  // option to save the html file of the Google search result page\n  { name: 'htmlFileOutputPath', alias: 'h', type: String },\n\n  // option to use specific HTML file to parse, one that might exist locally\n  // for example, main for debugging purposes\n  { name: 'fromFile', alias: 'f', type: String },\n\n  // override the hard-coded selectors defined inside /src/utils.js\n  { name: 'titleSelector', type: String },\n  { name: 'linkSelector', type: String },\n  { name: 'snippetSelector', type: String },\n];\n\nmodule.exports = optionDefinitions;\n"]}