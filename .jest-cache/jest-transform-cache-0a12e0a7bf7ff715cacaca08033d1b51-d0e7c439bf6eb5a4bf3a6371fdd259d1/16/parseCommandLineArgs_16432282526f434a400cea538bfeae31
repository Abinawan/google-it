bf8817a27f43fe7c812e812631357755
/* istanbul ignore next */
var cov_2n147se7bx = function () {
  var path = "/Users/patneedham/Desktop/dev/tmp/google-it/test/parseCommandLineArgs.js";
  var hash = "58a91be58906c296b9c50206245d0aae059d90c2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/patneedham/Desktop/dev/tmp/google-it/test/parseCommandLineArgs.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 15
        },
        end: {
          line: 1,
          column: 32
        }
      },
      "1": {
        start: {
          line: 2,
          column: 29
        },
        end: {
          line: 2,
          column: 67
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 8,
          column: 5
        }
      },
      "4": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "5": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 78
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 33
          },
          end: {
            line: 4,
            column: 34
          }
        },
        loc: {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 5,
            column: 54
          },
          end: {
            line: 5,
            column: 55
          }
        },
        loc: {
          start: {
            line: 5,
            column: 60
          },
          end: {
            line: 8,
            column: 3
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "58a91be58906c296b9c50206245d0aae059d90c2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

const assert =
/* istanbul ignore next */
(cov_2n147se7bx.s[0]++, require('assert'));
const parseCommandLineArgs =
/* istanbul ignore next */
(cov_2n147se7bx.s[1]++, require('../src/parseCommandLineArgs'));

/* istanbul ignore next */
cov_2n147se7bx.s[2]++;
describe('parseCommandLineArgs', () => {
  /* istanbul ignore next */
  cov_2n147se7bx.f[0]++;
  cov_2n147se7bx.s[3]++;
  it('only sets query option when argv.length === 3', () => {
    /* istanbul ignore next */
    cov_2n147se7bx.f[1]++;
    const argv =
    /* istanbul ignore next */
    (cov_2n147se7bx.s[4]++, ['node', '/path/to/file/app.js', 'my search term']);

    /* istanbul ignore next */
    cov_2n147se7bx.s[5]++;
    assert.deepEqual(parseCommandLineArgs(argv), {
      query: 'my search term'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlQ29tbWFuZExpbmVBcmdzLmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJwYXJzZUNvbW1hbmRMaW5lQXJncyIsImRlc2NyaWJlIiwiaXQiLCJhcmd2IiwiZGVlcEVxdWFsIiwicXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBTUEsTUFBTTtBQUFBO0FBQUEsd0JBQUdDLE9BQU8sQ0FBQyxRQUFELENBQVYsQ0FBWjtBQUNBLE1BQU1DLG9CQUFvQjtBQUFBO0FBQUEsd0JBQUdELE9BQU8sQ0FBQyw2QkFBRCxDQUFWLENBQTFCOzs7O0FBRUFFLFFBQVEsQ0FBQyxzQkFBRCxFQUF5QixNQUFNO0FBQUE7QUFBQTtBQUFBO0FBQ3JDQyxFQUFBQSxFQUFFLENBQUMsK0NBQUQsRUFBa0QsTUFBTTtBQUFBO0FBQUE7QUFDeEQsVUFBTUMsSUFBSTtBQUFBO0FBQUEsNEJBQUcsQ0FBQyxNQUFELEVBQVMsc0JBQVQsRUFBaUMsZ0JBQWpDLENBQUgsQ0FBVjs7QUFEd0Q7QUFBQTtBQUV4REwsSUFBQUEsTUFBTSxDQUFDTSxTQUFQLENBQWlCSixvQkFBb0IsQ0FBQ0csSUFBRCxDQUFyQyxFQUE2QztBQUFFRSxNQUFBQSxLQUFLLEVBQUU7QUFBVCxLQUE3QztBQUNELEdBSEMsQ0FBRjtBQUlELENBTE8sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuY29uc3QgcGFyc2VDb21tYW5kTGluZUFyZ3MgPSByZXF1aXJlKCcuLi9zcmMvcGFyc2VDb21tYW5kTGluZUFyZ3MnKTtcblxuZGVzY3JpYmUoJ3BhcnNlQ29tbWFuZExpbmVBcmdzJywgKCkgPT4ge1xuICBpdCgnb25seSBzZXRzIHF1ZXJ5IG9wdGlvbiB3aGVuIGFyZ3YubGVuZ3RoID09PSAzJywgKCkgPT4ge1xuICAgIGNvbnN0IGFyZ3YgPSBbJ25vZGUnLCAnL3BhdGgvdG8vZmlsZS9hcHAuanMnLCAnbXkgc2VhcmNoIHRlcm0nXTtcbiAgICBhc3NlcnQuZGVlcEVxdWFsKHBhcnNlQ29tbWFuZExpbmVBcmdzKGFyZ3YpLCB7IHF1ZXJ5OiAnbXkgc2VhcmNoIHRlcm0nIH0pO1xuICB9KTtcbn0pO1xuIl19