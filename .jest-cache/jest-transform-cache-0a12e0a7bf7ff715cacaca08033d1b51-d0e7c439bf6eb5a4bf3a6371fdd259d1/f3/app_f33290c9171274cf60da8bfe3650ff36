c01498783273fb3d9f900f160971b573
#! /usr/bin/env node

/* eslint-disable no-console */

/* istanbul ignore next */
var cov_a5241citm = function () {
  var path = "/Users/patneedham/Desktop/dev/tmp/google-it/src/app.js";
  var hash = "eeff6f9a5055de69897ef0c270f1dc7c1106b77c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/patneedham/Desktop/dev/tmp/google-it/src/app.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 26
        }
      },
      "1": {
        start: {
          line: 7,
          column: 19
        },
        end: {
          line: 7,
          column: 74
        }
      },
      "2": {
        start: {
          line: 8,
          column: 29
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "3": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "4": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 38
        }
      },
      "5": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "6": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "7": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "8": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "9": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "10": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "11": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "12": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 10
          },
          end: {
            line: 19,
            column: 11
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 0
          },
          end: {
            line: 24,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 0
          },
          end: {
            line: 24,
            column: 1
          }
        }, {
          start: {
            line: 14,
            column: 0
          },
          end: {
            line: 24,
            column: 1
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "eeff6f9a5055de69897ef0c270f1dc7c1106b77c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

const ora =
/* istanbul ignore next */
(cov_a5241citm.s[0]++, require('ora'));
const theSpinner =
/* istanbul ignore next */
(cov_a5241citm.s[1]++, ora({
  text: 'Loading results',
  color: 'cyan'
}).start());
const parseCommandLineArgs =
/* istanbul ignore next */
(cov_a5241citm.s[2]++, require('./parseCommandLineArgs'));
const validateCLIArguments =
/* istanbul ignore next */
(cov_a5241citm.s[3]++, require('./validateCLIArguments'));
const googleIt =
/* istanbul ignore next */
(cov_a5241citm.s[4]++, require('./googleIt'));
const cliOptions =
/* istanbul ignore next */
(cov_a5241citm.s[5]++, parseCommandLineArgs(process.argv));
const validation =
/* istanbul ignore next */
(cov_a5241citm.s[6]++, validateCLIArguments(cliOptions));

/* istanbul ignore next */
cov_a5241citm.s[7]++;

if (!validation.valid) {
  /* istanbul ignore next */
  cov_a5241citm.b[0][0]++;
  cov_a5241citm.s[8]++;
  console.log(`Invalid options. Error:  ${validation.error}`);

  /* istanbul ignore next */
  cov_a5241citm.s[9]++;
  theSpinner.clear();
} else {
  /* istanbul ignore next */
  cov_a5241citm.b[0][1]++;
  cov_a5241citm.s[10]++;
  googleIt(cliOptions).then(() => {
    /* istanbul ignore next */
    cov_a5241citm.f[0]++;
    cov_a5241citm.s[11]++;
    theSpinner.stop();

    /* istanbul ignore next */
    cov_a5241citm.s[12]++;
    theSpinner.clear();
  }).catch(console.error);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJvcmEiLCJyZXF1aXJlIiwidGhlU3Bpbm5lciIsInRleHQiLCJjb2xvciIsInN0YXJ0IiwicGFyc2VDb21tYW5kTGluZUFyZ3MiLCJ2YWxpZGF0ZUNMSUFyZ3VtZW50cyIsImdvb2dsZUl0IiwiY2xpT3B0aW9ucyIsInByb2Nlc3MiLCJhcmd2IiwidmFsaWRhdGlvbiIsInZhbGlkIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiY2xlYXIiLCJ0aGVuIiwic3RvcCIsImNhdGNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxNQUFNQSxHQUFHO0FBQUE7QUFBQSx1QkFBR0MsT0FBTyxDQUFDLEtBQUQsQ0FBVixDQUFUO0FBRUEsTUFBTUMsVUFBVTtBQUFBO0FBQUEsdUJBQUdGLEdBQUcsQ0FBQztBQUFFRyxFQUFBQSxJQUFJLEVBQUUsaUJBQVI7QUFBMkJDLEVBQUFBLEtBQUssRUFBRTtBQUFsQyxDQUFELENBQUgsQ0FBZ0RDLEtBQWhELEVBQUgsQ0FBaEI7QUFDQSxNQUFNQyxvQkFBb0I7QUFBQTtBQUFBLHVCQUFHTCxPQUFPLENBQUMsd0JBQUQsQ0FBVixDQUExQjtBQUNBLE1BQU1NLG9CQUFvQjtBQUFBO0FBQUEsdUJBQUdOLE9BQU8sQ0FBQyx3QkFBRCxDQUFWLENBQTFCO0FBQ0EsTUFBTU8sUUFBUTtBQUFBO0FBQUEsdUJBQUdQLE9BQU8sQ0FBQyxZQUFELENBQVYsQ0FBZDtBQUVBLE1BQU1RLFVBQVU7QUFBQTtBQUFBLHVCQUFHSCxvQkFBb0IsQ0FBQ0ksT0FBTyxDQUFDQyxJQUFULENBQXZCLENBQWhCO0FBQ0EsTUFBTUMsVUFBVTtBQUFBO0FBQUEsdUJBQUdMLG9CQUFvQixDQUFDRSxVQUFELENBQXZCLENBQWhCOzs7OztBQUNBLElBQUksQ0FBQ0csVUFBVSxDQUFDQyxLQUFoQixFQUF1QjtBQUFBO0FBQUE7QUFBQTtBQUNyQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsNEJBQTJCSCxVQUFVLENBQUNJLEtBQU0sRUFBekQ7O0FBRHFCO0FBQUE7QUFFckJkLEVBQUFBLFVBQVUsQ0FBQ2UsS0FBWDtBQUNELENBSEQsTUFHTztBQUFBO0FBQUE7QUFBQTtBQUNMVCxFQUFBQSxRQUFRLENBQUNDLFVBQUQsQ0FBUixDQUNHUyxJQURILENBQ1EsTUFBTTtBQUFBO0FBQUE7QUFBQTtBQUNWaEIsSUFBQUEsVUFBVSxDQUFDaUIsSUFBWDs7QUFEVTtBQUFBO0FBRVZqQixJQUFBQSxVQUFVLENBQUNlLEtBQVg7QUFDRCxHQUpILEVBS0dHLEtBTEgsQ0FLU04sT0FBTyxDQUFDRSxLQUxqQjtBQU1EIiwic291cmNlc0NvbnRlbnQiOlsiIyEgL3Vzci9iaW4vZW52IG5vZGVcblxuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuXG5jb25zdCBvcmEgPSByZXF1aXJlKCdvcmEnKTtcblxuY29uc3QgdGhlU3Bpbm5lciA9IG9yYSh7IHRleHQ6ICdMb2FkaW5nIHJlc3VsdHMnLCBjb2xvcjogJ2N5YW4nIH0pLnN0YXJ0KCk7XG5jb25zdCBwYXJzZUNvbW1hbmRMaW5lQXJncyA9IHJlcXVpcmUoJy4vcGFyc2VDb21tYW5kTGluZUFyZ3MnKTtcbmNvbnN0IHZhbGlkYXRlQ0xJQXJndW1lbnRzID0gcmVxdWlyZSgnLi92YWxpZGF0ZUNMSUFyZ3VtZW50cycpO1xuY29uc3QgZ29vZ2xlSXQgPSByZXF1aXJlKCcuL2dvb2dsZUl0Jyk7XG5cbmNvbnN0IGNsaU9wdGlvbnMgPSBwYXJzZUNvbW1hbmRMaW5lQXJncyhwcm9jZXNzLmFyZ3YpO1xuY29uc3QgdmFsaWRhdGlvbiA9IHZhbGlkYXRlQ0xJQXJndW1lbnRzKGNsaU9wdGlvbnMpO1xuaWYgKCF2YWxpZGF0aW9uLnZhbGlkKSB7XG4gIGNvbnNvbGUubG9nKGBJbnZhbGlkIG9wdGlvbnMuIEVycm9yOiAgJHt2YWxpZGF0aW9uLmVycm9yfWApO1xuICB0aGVTcGlubmVyLmNsZWFyKCk7XG59IGVsc2Uge1xuICBnb29nbGVJdChjbGlPcHRpb25zKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHRoZVNwaW5uZXIuc3RvcCgpO1xuICAgICAgdGhlU3Bpbm5lci5jbGVhcigpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xufVxuIl19