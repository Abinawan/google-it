8cc958416471c0806bfd896e2551a044
"use strict";

var _utils = require("../src/utils");

describe('getDefaultRequestOptions', function () {
  it('uses default limit, start, and userAgent when none of those are passed', function () {
    var requestOptions = (0, _utils.getDefaultRequestOptions)({
      query: 'foo'
    });
    expect(requestOptions).toEqual({
      url: 'https://www.google.com/search',
      qs: {
        q: 'foo',
        num: _utils.defaultLimit,
        start: _utils.defaultStart
      },
      headers: {
        'User-Agent': _utils.defaultUserAgent
      }
    });
  });
});
describe('getTitleSelector', function () {
  it('uses the default value when passedValue is null/undefined and the env var does not exist', function () {
    expect((0, _utils.getTitleSelector)()).toBe(_utils.titleSelector);
  });
});
describe('getLinkSelector', function () {
  it('uses the default value when passedValue is null/undefined and the env var does not exist', function () {
    expect((0, _utils.getLinkSelector)()).toBe(_utils.linkSelector);
  });
});
describe('getSnippetSelector', function () {
  it('uses the default value when passedValue is null/undefined and the env var does not exist', function () {
    expect((0, _utils.getSnippetSelector)()).toBe(_utils.snippetSelector);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLnNwZWMuanMiXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpdCIsInJlcXVlc3RPcHRpb25zIiwicXVlcnkiLCJleHBlY3QiLCJ0b0VxdWFsIiwidXJsIiwicXMiLCJxIiwibnVtIiwiZGVmYXVsdExpbWl0Iiwic3RhcnQiLCJkZWZhdWx0U3RhcnQiLCJoZWFkZXJzIiwiZGVmYXVsdFVzZXJBZ2VudCIsInRvQmUiLCJ0aXRsZVNlbGVjdG9yIiwibGlua1NlbGVjdG9yIiwic25pcHBldFNlbGVjdG9yIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQWFBQSxRQUFRLENBQUMsMEJBQUQsRUFBNkIsWUFBTTtBQUN6Q0MsRUFBQUEsRUFBRSxDQUFDLHdFQUFELEVBQTJFLFlBQU07QUFDakYsUUFBTUMsY0FBYyxHQUFHLHFDQUF5QjtBQUFFQyxNQUFBQSxLQUFLLEVBQUU7QUFBVCxLQUF6QixDQUF2QjtBQUNBQyxJQUFBQSxNQUFNLENBQUNGLGNBQUQsQ0FBTixDQUF1QkcsT0FBdkIsQ0FBK0I7QUFDN0JDLE1BQUFBLEdBQUcsRUFBRSwrQkFEd0I7QUFFN0JDLE1BQUFBLEVBQUUsRUFBRTtBQUNGQyxRQUFBQSxDQUFDLEVBQUUsS0FERDtBQUVGQyxRQUFBQSxHQUFHLEVBQUVDLG1CQUZIO0FBR0ZDLFFBQUFBLEtBQUssRUFBRUM7QUFITCxPQUZ5QjtBQU83QkMsTUFBQUEsT0FBTyxFQUFFO0FBQ1Asc0JBQWNDO0FBRFA7QUFQb0IsS0FBL0I7QUFXRCxHQWJDLENBQUY7QUFjRCxDQWZPLENBQVI7QUFpQkFkLFFBQVEsQ0FBQyxrQkFBRCxFQUFxQixZQUFNO0FBQ2pDQyxFQUFBQSxFQUFFLENBQUMsMEZBQUQsRUFBNkYsWUFBTTtBQUNuR0csSUFBQUEsTUFBTSxDQUFDLDhCQUFELENBQU4sQ0FBMkJXLElBQTNCLENBQWdDQyxvQkFBaEM7QUFDRCxHQUZDLENBQUY7QUFHRCxDQUpPLENBQVI7QUFNQWhCLFFBQVEsQ0FBQyxpQkFBRCxFQUFvQixZQUFNO0FBQ2hDQyxFQUFBQSxFQUFFLENBQUMsMEZBQUQsRUFBNkYsWUFBTTtBQUNuR0csSUFBQUEsTUFBTSxDQUFDLDZCQUFELENBQU4sQ0FBMEJXLElBQTFCLENBQStCRSxtQkFBL0I7QUFDRCxHQUZDLENBQUY7QUFHRCxDQUpPLENBQVI7QUFNQWpCLFFBQVEsQ0FBQyxvQkFBRCxFQUF1QixZQUFNO0FBQ25DQyxFQUFBQSxFQUFFLENBQUMsMEZBQUQsRUFBNkYsWUFBTTtBQUNuR0csSUFBQUEsTUFBTSxDQUFDLGdDQUFELENBQU4sQ0FBNkJXLElBQTdCLENBQWtDRyxzQkFBbEM7QUFDRCxHQUZDLENBQUY7QUFHRCxDQUpPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBnZXREZWZhdWx0UmVxdWVzdE9wdGlvbnMsXG4gIGdldFRpdGxlU2VsZWN0b3IsXG4gIGdldExpbmtTZWxlY3RvcixcbiAgZ2V0U25pcHBldFNlbGVjdG9yLFxuICBkZWZhdWx0TGltaXQsXG4gIGRlZmF1bHRTdGFydCxcbiAgZGVmYXVsdFVzZXJBZ2VudCxcbiAgdGl0bGVTZWxlY3RvcixcbiAgbGlua1NlbGVjdG9yLFxuICBzbmlwcGV0U2VsZWN0b3IsXG59IGZyb20gJy4uL3NyYy91dGlscyc7XG5cbmRlc2NyaWJlKCdnZXREZWZhdWx0UmVxdWVzdE9wdGlvbnMnLCAoKSA9PiB7XG4gIGl0KCd1c2VzIGRlZmF1bHQgbGltaXQsIHN0YXJ0LCBhbmQgdXNlckFnZW50IHdoZW4gbm9uZSBvZiB0aG9zZSBhcmUgcGFzc2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IHJlcXVlc3RPcHRpb25zID0gZ2V0RGVmYXVsdFJlcXVlc3RPcHRpb25zKHsgcXVlcnk6ICdmb28nIH0pO1xuICAgIGV4cGVjdChyZXF1ZXN0T3B0aW9ucykudG9FcXVhbCh7XG4gICAgICB1cmw6ICdodHRwczovL3d3dy5nb29nbGUuY29tL3NlYXJjaCcsXG4gICAgICBxczoge1xuICAgICAgICBxOiAnZm9vJyxcbiAgICAgICAgbnVtOiBkZWZhdWx0TGltaXQsXG4gICAgICAgIHN0YXJ0OiBkZWZhdWx0U3RhcnQsXG4gICAgICB9LFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnVXNlci1BZ2VudCc6IGRlZmF1bHRVc2VyQWdlbnQsXG4gICAgICB9LFxuICAgIH0pO1xuICB9KTtcbn0pO1xuXG5kZXNjcmliZSgnZ2V0VGl0bGVTZWxlY3RvcicsICgpID0+IHtcbiAgaXQoJ3VzZXMgdGhlIGRlZmF1bHQgdmFsdWUgd2hlbiBwYXNzZWRWYWx1ZSBpcyBudWxsL3VuZGVmaW5lZCBhbmQgdGhlIGVudiB2YXIgZG9lcyBub3QgZXhpc3QnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGdldFRpdGxlU2VsZWN0b3IoKSkudG9CZSh0aXRsZVNlbGVjdG9yKTtcbiAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ2dldExpbmtTZWxlY3RvcicsICgpID0+IHtcbiAgaXQoJ3VzZXMgdGhlIGRlZmF1bHQgdmFsdWUgd2hlbiBwYXNzZWRWYWx1ZSBpcyBudWxsL3VuZGVmaW5lZCBhbmQgdGhlIGVudiB2YXIgZG9lcyBub3QgZXhpc3QnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGdldExpbmtTZWxlY3RvcigpKS50b0JlKGxpbmtTZWxlY3Rvcik7XG4gIH0pO1xufSk7XG5cbmRlc2NyaWJlKCdnZXRTbmlwcGV0U2VsZWN0b3InLCAoKSA9PiB7XG4gIGl0KCd1c2VzIHRoZSBkZWZhdWx0IHZhbHVlIHdoZW4gcGFzc2VkVmFsdWUgaXMgbnVsbC91bmRlZmluZWQgYW5kIHRoZSBlbnYgdmFyIGRvZXMgbm90IGV4aXN0JywgKCkgPT4ge1xuICAgIGV4cGVjdChnZXRTbmlwcGV0U2VsZWN0b3IoKSkudG9CZShzbmlwcGV0U2VsZWN0b3IpO1xuICB9KTtcbn0pO1xuIl19