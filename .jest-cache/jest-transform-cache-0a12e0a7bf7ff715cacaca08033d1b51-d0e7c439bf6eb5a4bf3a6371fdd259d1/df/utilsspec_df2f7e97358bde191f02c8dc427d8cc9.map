{"version":3,"sources":["utils.spec.js"],"names":["getDefaultRequestOptions","getTitleSelector","getLinkSelector","getSnippetSelector","defaultLimit","defaultStart","defaultUserAgent","titleSelector","linkSelector","snippetSelector","describe","it","requestOptions","query","expect","toEqual","url","qs","q","num","start","headers","toBe"],"mappings":"AAAA,SACEA,wBADF,EAEEC,gBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,gBAPF,EAQEC,aARF,EASEC,YATF,EAUEC,eAVF,QAWO,cAXP;AAaAC,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACzCC,EAAAA,EAAE,CAAC,wEAAD,EAA2E,MAAM;AACjF,UAAMC,cAAc,GAAGZ,wBAAwB,CAAC;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAAD,CAA/C;AACAC,IAAAA,MAAM,CAACF,cAAD,CAAN,CAAuBG,OAAvB,CAA+B;AAC7BC,MAAAA,GAAG,EAAE,+BADwB;AAE7BC,MAAAA,EAAE,EAAE;AACFC,QAAAA,CAAC,EAAE,KADD;AAEFC,QAAAA,GAAG,EAAEf,YAFH;AAGFgB,QAAAA,KAAK,EAAEf;AAHL,OAFyB;AAO7BgB,MAAAA,OAAO,EAAE;AACP,sBAAcf;AADP;AAPoB,KAA/B;AAWD,GAbC,CAAF;AAcD,CAfO,CAAR;AAiBAI,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCC,EAAAA,EAAE,CAAC,0FAAD,EAA6F,MAAM;AACnGG,IAAAA,MAAM,CAACb,gBAAgB,EAAjB,CAAN,CAA2BqB,IAA3B,CAAgCf,aAAhC;AACD,GAFC,CAAF;AAGD,CAJO,CAAR;AAMAG,QAAQ,CAAC,iBAAD,EAAoB,MAAM;AAChCC,EAAAA,EAAE,CAAC,0FAAD,EAA6F,MAAM;AACnGG,IAAAA,MAAM,CAACZ,eAAe,EAAhB,CAAN,CAA0BoB,IAA1B,CAA+Bd,YAA/B;AACD,GAFC,CAAF;AAGD,CAJO,CAAR;AAMAE,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCC,EAAAA,EAAE,CAAC,0FAAD,EAA6F,MAAM;AACnGG,IAAAA,MAAM,CAACX,kBAAkB,EAAnB,CAAN,CAA6BmB,IAA7B,CAAkCb,eAAlC;AACD,GAFC,CAAF;AAGD,CAJO,CAAR","sourcesContent":["import {\n  getDefaultRequestOptions,\n  getTitleSelector,\n  getLinkSelector,\n  getSnippetSelector,\n  defaultLimit,\n  defaultStart,\n  defaultUserAgent,\n  titleSelector,\n  linkSelector,\n  snippetSelector,\n} from '../src/utils';\n\ndescribe('getDefaultRequestOptions', () => {\n  it('uses default limit, start, and userAgent when none of those are passed', () => {\n    const requestOptions = getDefaultRequestOptions({ query: 'foo' });\n    expect(requestOptions).toEqual({\n      url: 'https://www.google.com/search',\n      qs: {\n        q: 'foo',\n        num: defaultLimit,\n        start: defaultStart,\n      },\n      headers: {\n        'User-Agent': defaultUserAgent,\n      },\n    });\n  });\n});\n\ndescribe('getTitleSelector', () => {\n  it('uses the default value when passedValue is null/undefined and the env var does not exist', () => {\n    expect(getTitleSelector()).toBe(titleSelector);\n  });\n});\n\ndescribe('getLinkSelector', () => {\n  it('uses the default value when passedValue is null/undefined and the env var does not exist', () => {\n    expect(getLinkSelector()).toBe(linkSelector);\n  });\n});\n\ndescribe('getSnippetSelector', () => {\n  it('uses the default value when passedValue is null/undefined and the env var does not exist', () => {\n    expect(getSnippetSelector()).toBe(snippetSelector);\n  });\n});\n"]}