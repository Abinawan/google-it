ab795966a31f657efc1a3715d72e85ef
import { getDefaultRequestOptions, getTitleSelector, getLinkSelector, getSnippetSelector, defaultLimit, defaultStart, defaultUserAgent, titleSelector, linkSelector, snippetSelector } from '../src/utils';
describe('getDefaultRequestOptions', () => {
  it('uses default limit, start, and userAgent when none of those are passed', () => {
    const requestOptions = getDefaultRequestOptions({
      query: 'foo'
    });
    expect(requestOptions).toEqual({
      url: 'https://www.google.com/search',
      qs: {
        q: 'foo',
        num: defaultLimit,
        start: defaultStart
      },
      headers: {
        'User-Agent': defaultUserAgent
      }
    });
  });
});
describe('getTitleSelector', () => {
  it('uses the default value when passedValue is null/undefined and the env var does not exist', () => {
    expect(getTitleSelector()).toBe(titleSelector);
  });
});
describe('getLinkSelector', () => {
  it('uses the default value when passedValue is null/undefined and the env var does not exist', () => {
    expect(getLinkSelector()).toBe(linkSelector);
  });
});
describe('getSnippetSelector', () => {
  it('uses the default value when passedValue is null/undefined and the env var does not exist', () => {
    expect(getSnippetSelector()).toBe(snippetSelector);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLnNwZWMuanMiXSwibmFtZXMiOlsiZ2V0RGVmYXVsdFJlcXVlc3RPcHRpb25zIiwiZ2V0VGl0bGVTZWxlY3RvciIsImdldExpbmtTZWxlY3RvciIsImdldFNuaXBwZXRTZWxlY3RvciIsImRlZmF1bHRMaW1pdCIsImRlZmF1bHRTdGFydCIsImRlZmF1bHRVc2VyQWdlbnQiLCJ0aXRsZVNlbGVjdG9yIiwibGlua1NlbGVjdG9yIiwic25pcHBldFNlbGVjdG9yIiwiZGVzY3JpYmUiLCJpdCIsInJlcXVlc3RPcHRpb25zIiwicXVlcnkiLCJleHBlY3QiLCJ0b0VxdWFsIiwidXJsIiwicXMiLCJxIiwibnVtIiwic3RhcnQiLCJoZWFkZXJzIiwidG9CZSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FDRUEsd0JBREYsRUFFRUMsZ0JBRkYsRUFHRUMsZUFIRixFQUlFQyxrQkFKRixFQUtFQyxZQUxGLEVBTUVDLFlBTkYsRUFPRUMsZ0JBUEYsRUFRRUMsYUFSRixFQVNFQyxZQVRGLEVBVUVDLGVBVkYsUUFXTyxjQVhQO0FBYUFDLFFBQVEsQ0FBQywwQkFBRCxFQUE2QixNQUFNO0FBQ3pDQyxFQUFBQSxFQUFFLENBQUMsd0VBQUQsRUFBMkUsTUFBTTtBQUNqRixVQUFNQyxjQUFjLEdBQUdaLHdCQUF3QixDQUFDO0FBQUVhLE1BQUFBLEtBQUssRUFBRTtBQUFULEtBQUQsQ0FBL0M7QUFDQUMsSUFBQUEsTUFBTSxDQUFDRixjQUFELENBQU4sQ0FBdUJHLE9BQXZCLENBQStCO0FBQzdCQyxNQUFBQSxHQUFHLEVBQUUsK0JBRHdCO0FBRTdCQyxNQUFBQSxFQUFFLEVBQUU7QUFDRkMsUUFBQUEsQ0FBQyxFQUFFLEtBREQ7QUFFRkMsUUFBQUEsR0FBRyxFQUFFZixZQUZIO0FBR0ZnQixRQUFBQSxLQUFLLEVBQUVmO0FBSEwsT0FGeUI7QUFPN0JnQixNQUFBQSxPQUFPLEVBQUU7QUFDUCxzQkFBY2Y7QUFEUDtBQVBvQixLQUEvQjtBQVdELEdBYkMsQ0FBRjtBQWNELENBZk8sQ0FBUjtBQWlCQUksUUFBUSxDQUFDLGtCQUFELEVBQXFCLE1BQU07QUFDakNDLEVBQUFBLEVBQUUsQ0FBQywwRkFBRCxFQUE2RixNQUFNO0FBQ25HRyxJQUFBQSxNQUFNLENBQUNiLGdCQUFnQixFQUFqQixDQUFOLENBQTJCcUIsSUFBM0IsQ0FBZ0NmLGFBQWhDO0FBQ0QsR0FGQyxDQUFGO0FBR0QsQ0FKTyxDQUFSO0FBTUFHLFFBQVEsQ0FBQyxpQkFBRCxFQUFvQixNQUFNO0FBQ2hDQyxFQUFBQSxFQUFFLENBQUMsMEZBQUQsRUFBNkYsTUFBTTtBQUNuR0csSUFBQUEsTUFBTSxDQUFDWixlQUFlLEVBQWhCLENBQU4sQ0FBMEJvQixJQUExQixDQUErQmQsWUFBL0I7QUFDRCxHQUZDLENBQUY7QUFHRCxDQUpPLENBQVI7QUFNQUUsUUFBUSxDQUFDLG9CQUFELEVBQXVCLE1BQU07QUFDbkNDLEVBQUFBLEVBQUUsQ0FBQywwRkFBRCxFQUE2RixNQUFNO0FBQ25HRyxJQUFBQSxNQUFNLENBQUNYLGtCQUFrQixFQUFuQixDQUFOLENBQTZCbUIsSUFBN0IsQ0FBa0NiLGVBQWxDO0FBQ0QsR0FGQyxDQUFGO0FBR0QsQ0FKTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZ2V0RGVmYXVsdFJlcXVlc3RPcHRpb25zLFxuICBnZXRUaXRsZVNlbGVjdG9yLFxuICBnZXRMaW5rU2VsZWN0b3IsXG4gIGdldFNuaXBwZXRTZWxlY3RvcixcbiAgZGVmYXVsdExpbWl0LFxuICBkZWZhdWx0U3RhcnQsXG4gIGRlZmF1bHRVc2VyQWdlbnQsXG4gIHRpdGxlU2VsZWN0b3IsXG4gIGxpbmtTZWxlY3RvcixcbiAgc25pcHBldFNlbGVjdG9yLFxufSBmcm9tICcuLi9zcmMvdXRpbHMnO1xuXG5kZXNjcmliZSgnZ2V0RGVmYXVsdFJlcXVlc3RPcHRpb25zJywgKCkgPT4ge1xuICBpdCgndXNlcyBkZWZhdWx0IGxpbWl0LCBzdGFydCwgYW5kIHVzZXJBZ2VudCB3aGVuIG5vbmUgb2YgdGhvc2UgYXJlIHBhc3NlZCcsICgpID0+IHtcbiAgICBjb25zdCByZXF1ZXN0T3B0aW9ucyA9IGdldERlZmF1bHRSZXF1ZXN0T3B0aW9ucyh7IHF1ZXJ5OiAnZm9vJyB9KTtcbiAgICBleHBlY3QocmVxdWVzdE9wdGlvbnMpLnRvRXF1YWwoe1xuICAgICAgdXJsOiAnaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2gnLFxuICAgICAgcXM6IHtcbiAgICAgICAgcTogJ2ZvbycsXG4gICAgICAgIG51bTogZGVmYXVsdExpbWl0LFxuICAgICAgICBzdGFydDogZGVmYXVsdFN0YXJ0LFxuICAgICAgfSxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ1VzZXItQWdlbnQnOiBkZWZhdWx0VXNlckFnZW50LFxuICAgICAgfSxcbiAgICB9KTtcbiAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ2dldFRpdGxlU2VsZWN0b3InLCAoKSA9PiB7XG4gIGl0KCd1c2VzIHRoZSBkZWZhdWx0IHZhbHVlIHdoZW4gcGFzc2VkVmFsdWUgaXMgbnVsbC91bmRlZmluZWQgYW5kIHRoZSBlbnYgdmFyIGRvZXMgbm90IGV4aXN0JywgKCkgPT4ge1xuICAgIGV4cGVjdChnZXRUaXRsZVNlbGVjdG9yKCkpLnRvQmUodGl0bGVTZWxlY3Rvcik7XG4gIH0pO1xufSk7XG5cbmRlc2NyaWJlKCdnZXRMaW5rU2VsZWN0b3InLCAoKSA9PiB7XG4gIGl0KCd1c2VzIHRoZSBkZWZhdWx0IHZhbHVlIHdoZW4gcGFzc2VkVmFsdWUgaXMgbnVsbC91bmRlZmluZWQgYW5kIHRoZSBlbnYgdmFyIGRvZXMgbm90IGV4aXN0JywgKCkgPT4ge1xuICAgIGV4cGVjdChnZXRMaW5rU2VsZWN0b3IoKSkudG9CZShsaW5rU2VsZWN0b3IpO1xuICB9KTtcbn0pO1xuXG5kZXNjcmliZSgnZ2V0U25pcHBldFNlbGVjdG9yJywgKCkgPT4ge1xuICBpdCgndXNlcyB0aGUgZGVmYXVsdCB2YWx1ZSB3aGVuIHBhc3NlZFZhbHVlIGlzIG51bGwvdW5kZWZpbmVkIGFuZCB0aGUgZW52IHZhciBkb2VzIG5vdCBleGlzdCcsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0U25pcHBldFNlbGVjdG9yKCkpLnRvQmUoc25pcHBldFNlbGVjdG9yKTtcbiAgfSk7XG59KTtcbiJdfQ==