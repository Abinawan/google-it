{"version":3,"sources":["parseCommandLineArgs.spec.js"],"names":["jest","mock","commandLineArgs","describe","it","result","expect","toEqual","query","toHaveBeenCalled"],"mappings":";;AAGAA,IAAI,CAACC,IAAL,CAAUC,wBAAV,EAA2B,YAAM,CAAE,CAAnC;;AAHA;;AACA;;;;AAIAC,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,EAAAA,EAAE,CAAC,8DAAD,EAAiE,YAAM;AACvE,QAAMC,MAAM,GAAG,mCAAqB,CAAC,MAAD,EAAS,mBAAT,EAA8B,UAA9B,CAArB,CAAf;AACAC,IAAAA,MAAM,CAACD,MAAD,CAAN,CAAeE,OAAf,CAAuB;AACrBC,MAAAA,KAAK,EAAE;AADc,KAAvB;AAGD,GALC,CAAF;AAOAJ,EAAAA,EAAE,CAAC,kEAAD,EAAqE,YAAM;AAC3E,uCAAqB,CAAC,MAAD,EAAS,mBAAT,EAA8B,UAA9B,EAA0C,eAA1C,CAArB;AACAE,IAAAA,MAAM,CAACJ,wBAAD,CAAN,CAAwBO,gBAAxB;AACD,GAHC,CAAF;AAID,CAZO,CAAR","sourcesContent":["import commandLineArgs from 'command-line-args';\nimport parseCommandLineArgs from '../src/parseCommandLineArgs';\n\njest.mock(commandLineArgs, () => {});\n\ndescribe('parseCommandLineArgs', () => {\n  it('returns object with only \"query\" field when argv.length is 3', () => {\n    const result = parseCommandLineArgs(['node', '/some/random/path', 'my query']);\n    expect(result).toEqual({\n      query: 'my query',\n    });\n  });\n\n  it('calls commandLineArgs when argv.length is something other than 3', () => {\n    parseCommandLineArgs(['node', '/some/random/path', 'my query', 'cinco de mayo']);\n    expect(commandLineArgs).toHaveBeenCalled();\n  });\n});\n"]}